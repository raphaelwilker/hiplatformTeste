{"version":3,"sources":["components/listItens/index.js","components/listItens/listItens.jsx","App.js","index.js"],"names":["ListItens","props","list","self","state","handleChange","bind","arrLevel1","arrLevel2","arrLevel3","arrLevel4","i","data","j","children","k","l","m","push","id","name","level","event","index","target","dataset","console","log","this","CollapseSection","useState","open","setOpen","className","onClick","aria-controls","aria-expanded","Collapse","in","map","ListGroup","key","Item","Form","Check","inline","data-level","data-index","type","label","length","indexRoot","Component","App","Jumbotron","Container","fluid","Row","Col","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1b23bc5.chunk.js","sourcesContent":["import ListItens from './listItens';\r\nexport default ListItens;","import React, { useState } from 'react'\r\nimport { Component } from 'react'\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport data from '../../assets/js/data/data.json'\r\nimport './style.css'\r\n\r\nclass ListItens extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.list = []\r\n    const self = this;\r\n    this.state = {};\r\n    this.handleChange = this.handleChange.bind(this);\r\n    \r\n\r\n    let arrLevel1 = []\r\n    let arrLevel2 = []\r\n    let arrLevel3 = []\r\n    let arrLevel4 = []\r\n    for(var i in data){\r\n\r\n      for(var j in data[i].children){\r\n\r\n        \r\n        for(var k in data[i].children[j].children){\r\n\r\n          \r\n          for(var l in data[i].children[j].children[k].children){\r\n            \r\n            for(var m in data[i].children[j].children[k].children[l].children){\r\n              \r\n              arrLevel4.push({\r\n                \"id\" : data[i].children[j].children[k].children[l].children[m].id,\r\n                \"name\": data[i].children[j].children[k].children[l].children[m].name,\r\n                \"level\": data[i].children[j].children[k].children[l].children[m].level,\r\n                \"open\": false,\r\n                \"children\": data[i].children[j].children[k].children[l].children[m].children\r\n              });\r\n\r\n            }\r\n\r\n            arrLevel3.push({\r\n              \"id\" : data[i].children[j].children[k].children[l].id,\r\n              \"name\": data[i].children[j].children[k].children[l].name,\r\n              \"level\": data[i].children[j].children[k].children[l].level,\r\n              \"open\": false,\r\n              \"children\": arrLevel4\r\n            });\r\n            arrLevel4 = []\r\n\r\n\r\n          }\r\n          arrLevel2.push({\r\n            \"id\" : data[i].children[j].children[k].id,\r\n            \"name\": data[i].children[j].children[k].name,\r\n            \"level\": data[i].children[j].children[k].level,\r\n            \"open\": false,\r\n            \"children\": arrLevel3\r\n          });\r\n          arrLevel3 = []\r\n        }\r\n        arrLevel1.push({\r\n          \"id\" : data[i].children[j].id,\r\n          \"name\": data[i].children[j].name,\r\n          \"level\": data[i].children[j].level,\r\n          \"open\": false,\r\n          \"children\": arrLevel2\r\n        });\r\n        arrLevel2 = []\r\n      }\r\n      self.list.push({\r\n        \"id\" : data[i].id,\r\n        \"name\": data[i].name,\r\n        \"level\": data[i].level,\r\n        \"open\": false,\r\n        \"children\": arrLevel1\r\n      });\r\n      arrLevel1 = []\r\n    }\r\n\r\n  } \r\n\r\n  handleChange(event){\r\n    const index = event.target.dataset.index \r\n    console.log(this.list[index].children);\r\n  }\r\n\r\n  \r\n  render(){\r\n\r\n    function CollapseSection(props) {\r\n      const [open, setOpen] = useState(false);\r\n      const list = props.list\r\n      \r\n      return (\r\n        <>\r\n          <span\r\n            className=\"Chrevon\"\r\n            onClick={() => setOpen(!open)}\r\n            aria-controls=\"example-collapse-text\"\r\n            aria-expanded={open}\r\n          >\r\n            {\r\n              open === false ? <Icon.ChevronDown /> : <Icon.ChevronUp />  \r\n            }\r\n          </span>\r\n          <Collapse in={open}>\r\n            <div id=\"example-collapse-text\">\r\n              {\r\n                list.map((data, index) =>{\r\n                  return(\r\n                    <ListGroup key={index}>\r\n                      <ListGroup.Item>\r\n                        <Form.Check inline  data-level={data.level} data-index={index} type=\"checkbox\" label={data.name} id={`select-child-${index}`}  name={data.id}  />\r\n                        {data.children.length > 0 &&\r\n                          <CollapseSection list={data.children}/>\r\n                        }\r\n                      </ListGroup.Item>\r\n                    </ListGroup>\r\n                  )\r\n                  \r\n                })\r\n              }\r\n            </div>\r\n          </Collapse>\r\n        </>\r\n      );\r\n    }\r\n    \r\n    return(\r\n      <Form>\r\n        {\r\n          \r\n          this.list.map((data,indexRoot)=>{\r\n\r\n            return(\r\n              <ListGroup key={indexRoot}>\r\n                <ListGroup.Item>\r\n                  <Form.Check inline data-level={data.level} data-index={indexRoot} type=\"checkbox\" label={data.name} id={`select-father-${data.id}-1`}  name={data.id}   />\r\n                  {data.children.length > 0 &&\r\n                    <CollapseSection list={data.children}/>\r\n                  }\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            )\r\n          })\r\n        }\r\n        \r\n      </Form>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default ListItens","import React, { Component } from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListItens from './components/listItens/';\n\nclass App extends Component {\n  \n\n  render(){\n    \n    return (\n      <div>\n        <header>\n          <Jumbotron>\n            <h1 className=\"header\">Teste HI <br/> Raphael Wilker Mendes Ara√∫jo</h1>\n          </Jumbotron>\n        </header>\n        <Container fluid>\n          <Row>\n            <Col>\n              <fieldset>\n                <legend>Form Selection</legend>\n                  <ListItens></ListItens>\n              </fieldset>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}